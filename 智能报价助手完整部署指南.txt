===============================================================================
                    智能报价助手系统 - 完整部署指南
===============================================================================

版本: v3.0.0
更新时间: 2025-07-01
项目类型: React + Node.js + MongoDB + AI集成
部署环境: 联通云服务器 (Ubuntu 20.04)
数据库: MongoDB 6.0+ (支持身份验证和权限管理)

===============================================================================
                              项目架构概述
===============================================================================

🏗️ 系统架构：
┌─────────────────────────────────────────────────────────────────┐
│                        联通云服务器                              │
│                     (IP: 103.77.22.42)                         │
├─────────────────────────────────────────────────────────────────┤
│ Nginx (端口80) - 反向代理 + 静态文件服务                         │
│ ├── 前端静态文件 (React构建文件)                                 │
│ ├── 代理到AI服务器 (端口3002)                                   │
│ └── 代理到API服务器 (端口3001)                                  │
├─────────────────────────────────────────────────────────────────┤
│ Node.js应用层                                                   │
│ ├── AI分析服务器 (server.js) - 端口3002                        │
│ │   ├── 文件上传处理 (Excel/PDF/Word)                          │
│ │   ├── OCR图像识别 (Tesseract.js)                            │
│ │   ├── AI数据清洗 (元景70B大模型)                             │
│ │   └── 智能报价分析                                           │
│ └── API数据库服务器 (server/app.js) - 端口3001                 │
│     ├── MongoDB数据库交互                                      │
│     ├── 报价单CRUD操作                                         │
│     ├── 供应商管理                                             │
│     ├── 用户权限管理                                           │
│     └── 历史记录查询                                           │
├─────────────────────────────────────────────────────────────────┤
│ MongoDB数据库 (端口27017) - 支持身份验证                         │
│ ├── quotation_db (AI服务器数据库)                              │
│ ├── quotation_system (API服务器数据库)                         │
│ │   ├── users (用户管理)                                      │
│ │   ├── vendors (供应商管理)                                  │
│ │   ├── quotations (报价记录)                                 │
│ │   └── registrationcodes (注册码管理)                        │
│ └── admin (系统管理数据库)                                      │
│     └── 数据库用户权限管理                                     │
├─────────────────────────────────────────────────────────────────┤
│ PM2进程管理                                                     │
│ ├── ai-server (server.js)                                     │
│ └── api-server (server/app.js)                                │
└─────────────────────────────────────────────────────────────────┘

🔧 端口分配：
- 80端口: Nginx (HTTP访问入口)
- 3001端口: API数据库服务器 (内网)
- 3002端口: AI分析服务器 (内网)  
- 27017端口: MongoDB数据库 (内网，支持认证)

===============================================================================
                              第一步：SSH连接服务器
===============================================================================

💻 PowerShell连接命令：
```powershell
# 连接到联通云服务器
ssh root@103.77.22.42 -p 55555

# 如果需要指定私钥文件
ssh -i "your-private-key.pem" root@103.77.22.42 -p 55555
```

🔐 首次连接注意事项：
- 确保防火墙已开放SSH端口(55555)
- 如果使用密钥认证，确保私钥文件权限正确
- 连接成功后会看到Ubuntu系统提示符

===============================================================================
                              第二步：系统环境准备
===============================================================================

🔄 更新系统：
```bash
# 更新软件包列表
apt update

# 升级已安装的软件包
apt upgrade -y

# 安装基础工具
apt install -y curl wget git vim htop unzip build-essential
```

📁 创建项目目录：
```bash
# 创建数据目录
mkdir -p /data/quotation-app

# 设置目录权限
chmod 755 /data/quotation-app

# 进入项目目录
cd /data/quotation-app
```

===============================================================================
                              第三步：安装Node.js环境
===============================================================================

🟢 安装Node.js 18.x (推荐版本)：
```bash
# 添加NodeSource仓库
curl -fsSL https://deb.nodesource.com/setup_18.x | bash -

# 安装Node.js和npm
apt-get install -y nodejs

# 验证安装
node --version  # 应该显示 v18.x.x
npm --version   # 应该显示 9.x.x 或更高
```

🔧 安装PM2进程管理器：
```bash
# 全局安装PM2
npm install -g pm2

# 验证PM2安装
pm2 --version
```

===============================================================================
                              第四步：安装MongoDB数据库
===============================================================================

🗄️ 安装MongoDB 6.0：
```bash
# 更新包列表
sudo apt update

# 安装MongoDB (会自动安装最新版本)
sudo apt install -y mongodb-org

# 如果上面失败，尝试安装社区版
sudo apt install -y mongodb

# 启动MongoDB服务
sudo systemctl start mongod
sudo systemctl enable mongod

# 验证MongoDB状态
sudo systemctl status mongod
```

📋 MongoDB配置文件路径：
```bash
# 配置文件位置
/etc/mongod.conf

# 日志文件位置
/var/log/mongodb/mongod.log

# 数据文件位置
/var/lib/mongodb/
```

===============================================================================
                              第五步：MongoDB安全配置
===============================================================================

🔒 **重要：启用MongoDB身份验证**

### 5.1 创建数据库用户

首先，在MongoDB未启用认证时创建用户：

```bash
# 连接到MongoDB
mongo

# 创建数据库管理员用户
use admin
db.createUser({
  user: "dbadmin",
  pwd: "QuotationDB_Admin_2024!",
  roles: [
    { role: "userAdminAnyDatabase", db: "admin" },
    { role: "readWriteAnyDatabase", db: "admin" },
    { role: "dbAdminAnyDatabase", db: "admin" }
  ]
})

# 创建应用程序用户
use quotation_system
db.createUser({
  user: "quotation_app",
  pwd: "QuotationApp_2024!",
  roles: [
    { role: "readWrite", db: "quotation_system" }
  ]
})

# 退出MongoDB shell
exit
```

### 5.2 启用MongoDB身份验证

```bash
# 编辑MongoDB配置文件
sudo nano /etc/mongod.conf

# 找到以下部分并修改：
```

在配置文件中添加或修改：
```yaml
# MongoDB配置文件 /etc/mongod.conf

# 存储配置
storage:
  dbPath: /var/lib/mongodb

# 日志配置
systemLog:
  destination: file
  logAppend: true
  path: /var/log/mongodb/mongod.log

# 网络配置
net:
  port: 27017
  bindIp: 127.0.0.1

# 进程管理
processManagement:
  timeZoneInfo: /usr/share/zoneinfo

# 安全配置 - 启用身份验证
security:
  authorization: enabled
```

### 5.3 重启MongoDB服务

```bash
# 重新加载systemd配置
sudo systemctl daemon-reload

# 重启MongoDB服务
sudo systemctl restart mongod

# 检查服务状态
sudo systemctl status mongod

# 验证MongoDB是否正常运行
sudo netstat -tlnp | grep 27017
```

### 5.4 验证权限配置

```bash
# 安装MongoDB客户端（如果需要）
sudo apt install -y mongodb-clients

# 测试未授权访问（应该失败）
mongo quotation_system --eval "db.vendors.find().limit(1)"

# 测试有效用户连接（应该成功）
mongo 'mongodb://quotation_app:QuotationApp_2024!@localhost:27017/quotation_system' --eval "db.vendors.find().limit(1)"
```

===============================================================================
                              第六步：部署项目代码
===============================================================================

📥 获取项目代码：
```bash
# 进入项目目录
cd /data/quotation-app

# 克隆项目仓库
git clone https://github.com/your-username/Homepage.git
# 或者使用SSH
# git clone git@github.com:your-username/Homepage.git

# 进入项目目录
cd Homepage
```

📦 安装项目依赖：
```bash
# 安装根目录依赖（前端）
npm install

# 安装服务器端依赖
cd server
npm install

# 返回根目录
cd ..

# 构建前端项目
npm run build
```

===============================================================================
                              第七步：环境变量配置
===============================================================================

🔧 **配置服务器端环境变量**

创建 `server/.env` 文件：
```bash
# 创建服务器环境配置文件
nano /data/quotation-app/Homepage/server/.env

# 添加以下配置内容：
```

`server/.env` 文件内容：
```env
# 服务器配置
PORT=3001
NODE_ENV=production

# 前端URL配置
FRONTEND_URL=http://103.77.22.42,http://103.77.22.42:8080

# MongoDB数据库连接（使用认证）
MONGODB_URI=mongodb://quotation_app:QuotationApp_2024%21@localhost:27017/quotation_system

# AI服务配置 (如果需要)
AI_SERVICE_URL=http://localhost:3002
```

🔧 **配置前端环境变量**

创建根目录 `.env` 文件：
```bash
# 创建前端环境配置文件
nano /data/quotation-app/Homepage/.env

# 添加以下配置内容：
```

`.env` 文件内容：
```env
# API服务器地址
REACT_APP_API_URL=http://103.77.22.42:3001

# 构建相关配置
GENERATE_SOURCEMAP=false
```

⚠️ **重要说明**：
- MongoDB连接字符串中的 `!` 需要使用URL编码 `%21`
- 确保密码和连接字符串的安全性
- 生产环境请使用更强的密码

===============================================================================
                              第八步：数据库初始化
===============================================================================

🗄️ **初始化数据库和用户数据**

```bash
# 进入服务器目录
cd /data/quotation-app/Homepage/server

# 运行数据库种子脚本
node scripts/seed.js

# 检查初始化结果
mongo 'mongodb://quotation_app:QuotationApp_2024!@localhost:27017/quotation_system' --eval "
  print('用户数量:', db.users.countDocuments());
  print('供应商数量:', db.vendors.countDocuments());
  db.users.find({}, {username: 1, role: 1, displayName: 1}).forEach(printjson);
"
```

🧑‍💼 **默认用户账号**：
- **管理员账号**: `CHINAUNICOM_ADMIN` / `admin_password01!`
- **普通用户账号**: `user` / `123456`

===============================================================================
                              第九步：启动应用服务
===============================================================================

🚀 **配置PM2进程管理**

```bash
# 进入项目根目录
cd /data/quotation-app/Homepage

# 停止可能存在的旧进程
pm2 stop all
pm2 delete all

# 启动API服务器（从server目录启动，确保.env文件路径正确）
cd server
pm2 start app.js --name "api-server"

# 启动AI服务器（如果需要）
cd ..
pm2 start server.js --name "ai-server"

# 查看进程状态
pm2 status

# 查看日志
pm2 logs --lines 20
```

🔍 **验证服务启动**

```bash
# 测试API服务器健康检查
curl http://localhost:3001/api/health

# 测试数据库连接
curl http://localhost:3001/api/vendors

# 查看详细日志
pm2 logs api-server --lines 30
```

===============================================================================
                              第十步：权限管理系统
===============================================================================

🛡️ **权限管理功能说明**

### 10.1 用户角色

**管理员（admin）**：
- 默认账号：`CHINAUNICOM_ADMIN` / `admin_password01!`
- 权限：所有功能 + 用户管理 + 删除供应商 + 生成注册码

**普通用户（user）**：
- 默认账号：`user` / `123456`
- 权限：基本功能（查询、录入、报价分析）

### 10.2 权限管理功能

**账号管理（管理员专用）**：
- 查看所有用户账号
- 删除用户账号
- 生成注册码（24小时有效）
- 管理注册码使用情况

**注册新用户**：
- 需要管理员提供的注册码
- 注册码一次性使用
- 自动分配普通用户权限

**供应商管理增强**：
- 管理员可删除供应商
- 记录录入人信息
- 权限控制删除操作

### 10.3 使用流程

**管理员生成注册码**：
1. 登录管理员账号
2. 右上角菜单 → 账号管理
3. 点击"生成注册码"
4. 复制注册码提供给新用户

**新用户注册**：
1. 在登录页面点击"注册"
2. 填写用户信息和注册码
3. 注册成功后使用新账号登录

===============================================================================
                              第十一步：MongoDB管理维护
===============================================================================

🔧 **日常管理命令**

### 11.1 数据库连接和查看

```bash
# 连接数据库（使用管理员账号）
mongo 'mongodb://dbadmin:QuotationDB_Admin_2024!@localhost:27017/admin'

# 连接应用数据库
mongo 'mongodb://quotation_app:QuotationApp_2024!@localhost:27017/quotation_system'

# 查看数据库状态
use quotation_system
db.stats()
show collections
```

### 11.2 用户管理操作

```javascript
// 查看所有用户
db.users.find().pretty()

// 查看管理员用户
db.users.find({role: "admin"}).pretty()

// 修改用户密码
db.users.updateOne(
    {username: "CHINAUNICOM_ADMIN"}, 
    {$set: {password: "新密码"}}
)

// 创建新管理员
db.users.insertOne({
    username: "新管理员",
    password: "密码",
    displayName: "管理员",
    role: "admin",
    isActive: true,
    createdBy: "system",
    createdAt: new Date(),
    updatedAt: new Date()
})
```

### 11.3 注册码管理

```javascript
// 查看所有注册码
db.registrationcodes.find().pretty()

// 查看未使用的注册码
db.registrationcodes.find({
    isUsed: false,
    expiresAt: {$gt: new Date()}
})

// 清理过期注册码
db.registrationcodes.deleteMany({
    expiresAt: {$lt: new Date()}
})
```

### 11.4 数据备份与恢复

```bash
# 备份整个数据库
mongodump --uri="mongodb://dbadmin:QuotationDB_Admin_2024!@localhost:27017/quotation_system" --out=/backup/

# 恢复数据库
mongorestore --uri="mongodb://dbadmin:QuotationDB_Admin_2024!@localhost:27017/quotation_system" /backup/quotation_system/

# 备份特定集合
mongodump --uri="mongodb://dbadmin:QuotationDB_Admin_2024!@localhost:27017/quotation_system" --collection=users --out=/backup/

# 导出JSON格式
mongoexport --uri="mongodb://dbadmin:QuotationDB_Admin_2024!@localhost:27017/quotation_system" --collection=users --out=users.json
```

===============================================================================
                              第十二步：Nginx配置（可选）
===============================================================================

🌐 **配置Nginx反向代理**

如果需要通过80端口访问应用：

```bash
# 安装Nginx
sudo apt install -y nginx

# 创建配置文件
sudo nano /etc/nginx/sites-available/quotation-app
```

Nginx配置内容：
```nginx
server {
    listen 80;
    server_name 103.77.22.42;

    # 前端静态文件
    location / {
        root /data/quotation-app/Homepage/build;
        try_files $uri $uri/ /index.html;
        index index.html;
    }

    # API代理
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
```

启用配置：
```bash
# 启用站点
sudo ln -s /etc/nginx/sites-available/quotation-app /etc/nginx/sites-enabled/

# 测试配置
sudo nginx -t

# 重启Nginx
sudo systemctl restart nginx
sudo systemctl enable nginx
```

===============================================================================
                              第十三步：系统监控和维护
===============================================================================

📊 **系统监控**

```bash
# 查看PM2进程状态
pm2 status
pm2 monit

# 查看系统资源
htop
df -h
free -m

# 查看MongoDB状态
sudo systemctl status mongod
mongo 'mongodb://dbadmin:QuotationDB_Admin_2024!@localhost:27017/admin' --eval "db.runCommand({serverStatus: 1})"
```

🔄 **定期维护任务**

创建维护脚本 `maintenance.sh`：
```bash
#!/bin/bash
# 系统维护脚本

echo "=== 智能报价助手系统维护 ==="
echo "时间: $(date)"

# 清理PM2日志
pm2 flush

# 清理过期注册码
mongo 'mongodb://quotation_app:QuotationApp_2024!@localhost:27017/quotation_system' --eval "
    db.registrationcodes.deleteMany({expiresAt: {\$lt: new Date()}});
    print('已清理过期注册码');
"

# 备份数据库
mkdir -p /backup/$(date +%Y%m%d)
mongodump --uri="mongodb://dbadmin:QuotationDB_Admin_2024!@localhost:27017/quotation_system" --out=/backup/$(date +%Y%m%d)/

# 重启应用（如果需要）
# pm2 restart all

echo "维护完成"
```

设置定期任务：
```bash
# 编辑crontab
crontab -e

# 添加每周维护任务
0 2 * * 0 /data/quotation-app/maintenance.sh >> /var/log/maintenance.log 2>&1
```

===============================================================================
                              第十四步：安全加固
===============================================================================

🔒 **安全配置建议**

### 14.1 修改默认密码

```bash
# 连接数据库修改默认密码
mongo 'mongodb://dbadmin:QuotationDB_Admin_2024!@localhost:27017/admin'

# 修改数据库管理员密码
db.changeUserPassword("dbadmin", "新的超强密码123!")

# 修改应用程序用户密码
use quotation_system
db.changeUserPassword("quotation_app", "新的应用密码456!")
```

记得同时更新 `server/.env` 文件中的连接字符串！

### 14.2 防火墙配置

```bash
# 配置ufw防火墙
sudo ufw enable
sudo ufw allow 55555/tcp  # SSH
sudo ufw allow 80/tcp     # HTTP
sudo ufw allow 3001/tcp   # API服务（如果需要外部访问）

# 查看防火墙状态
sudo ufw status
```

### 14.3 SSL证书（推荐）

```bash
# 安装certbot
sudo apt install -y certbot python3-certbot-nginx

# 申请SSL证书
sudo certbot --nginx -d yourdomain.com

# 设置自动更新
sudo crontab -e
# 添加：0 12 * * * /usr/bin/certbot renew --quiet
```

===============================================================================
                              第十五步：故障排除
===============================================================================

🔧 **常见问题解决**

### 15.1 MongoDB连接问题

```bash
# 检查MongoDB服务状态
sudo systemctl status mongod

# 查看MongoDB日志
sudo tail -50 /var/log/mongodb/mongod.log

# 检查端口占用
sudo netstat -tlnp | grep 27017

# 测试连接
mongo 'mongodb://quotation_app:QuotationApp_2024!@localhost:27017/quotation_system' --eval "db.version()"
```

### 15.2 应用程序问题

```bash
# 查看PM2日志
pm2 logs --lines 50

# 重启应用
pm2 restart all

# 检查环境变量
pm2 env api-server

# 检查端口占用
sudo netstat -tlnp | grep 3001
```

### 15.3 权限问题

```bash
# 检查文件权限
ls -la /data/quotation-app/Homepage/server/.env

# 检查PM2工作目录
pm2 show api-server

# 验证数据库权限
mongo 'mongodb://quotation_app:QuotationApp_2024!@localhost:27017/quotation_system' --eval "
    db.runCommand({connectionStatus: 1});
    db.users.findOne();
"
```

===============================================================================
                              第十六步：部署完成验证
===============================================================================

✅ **系统功能验证清单**

### 16.1 基础服务验证

```bash
# 1. MongoDB服务运行正常
sudo systemctl status mongod

# 2. PM2进程运行正常
pm2 status

# 3. API服务响应正常
curl http://localhost:3001/api/health

# 4. 数据库连接正常
curl http://localhost:3001/api/vendors
```

### 16.2 权限系统验证

访问 `http://103.77.22.42:3001` 或您的域名：

1. **登录测试**：
   - 管理员账号：`CHINAUNICOM_ADMIN` / `admin_password01!`
   - 普通用户：`user` / `123456`

2. **权限功能测试**：
   - 管理员：能看到账号管理菜单
   - 管理员：能删除供应商
   - 管理员：能生成注册码

3. **注册功能测试**：
   - 生成注册码
   - 使用注册码注册新用户
   - 新用户登录测试

### 16.3 数据功能验证

1. **供应商管理**：添加、查询、修改供应商信息
2. **报价功能**：上传文件、AI分析
3. **历史记录**：查看历史报价记录

===============================================================================
                              重要安全提醒
===============================================================================

🚨 **生产环境安全注意事项**

1. **立即修改默认密码**：
   - 数据库管理员密码
   - 应用程序用户密码
   - 系统管理员账号密码

2. **定期备份数据**：
   - 设置自动备份脚本
   - 测试备份恢复流程

3. **监控系统状态**：
   - 设置系统监控
   - 配置日志轮转

4. **网络安全**：
   - 使用防火墙限制端口访问
   - 考虑使用SSL证书
   - 定期更新系统

5. **访问控制**：
   - 不要在公网暴露MongoDB端口
   - 使用强密码策略
   - 定期审查用户权限

===============================================================================
                              联系信息和支持
===============================================================================

📞 **技术支持**：
- 服务器IP：103.77.22.42
- SSH端口：55555
- 数据库：MongoDB 6.0+
- 应用端口：3001 (API), 3002 (AI)

📋 **重要文件位置**：
- 项目目录：`/data/quotation-app/Homepage/`
- 服务器配置：`/data/quotation-app/Homepage/server/.env`
- MongoDB配置：`/etc/mongod.conf`
- 日志文件：`/var/log/mongodb/mongod.log`
- PM2日志：`~/.pm2/logs/`

🔐 **默认账号信息**：
- 数据库管理员：`dbadmin` / `QuotationDB_Admin_2024!`
- 应用数据库用户：`quotation_app` / `QuotationApp_2024!`
- 系统管理员：`CHINAUNICOM_ADMIN` / `admin_password01!`
- 普通用户：`user` / `123456`

⚠️ **生产环境部署后务必修改所有默认密码！**

===============================================================================
                              部署指南结束
===============================================================================

版本：v3.0.0
最后更新：2025-07-01
包含：完整部署、MongoDB安全配置、权限管理系统、维护指南

如有问题，请参考故障排除章节或联系技术支持。 